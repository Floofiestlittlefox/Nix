(undo-tree-save-format-version . 1)
"28d78dacadd1ee6ac2d9836cb8ffd9d8292cf2d3"
[nil nil nil nil (26225 26819 516083 457000) 0 nil]
([nil nil ((#("  " 0 2 (fontified nil)) . -75) (undo-tree-id0 . -2) (undo-tree-id1 . -2) (77 . 78) (74 . 77) (73 . 74) (#("  " 0 2 (fontified nil)) . -72) (undo-tree-id2 . -2) (undo-tree-id3 . -2) (74 . 75) (69 . 74) (68 . 69) (#(":" 0 1 (fontified t)) . -68) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 69 (67 . 69) (46 . 67) (#("F" 0 1 (fontified t)) . -46) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("o" 0 1 (fontified t)) . -47) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("r" 0 1 (fontified t)) . -48) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("m" 0 1 (fontified t)) . -49) (undo-tree-id12 . -1) (undo-tree-id13 . -1) 50 (42 . 50) (37 . 42) (30 . 37) (#(" " 0 1 (fontified t)) . -30) (undo-tree-id14 . -1) (undo-tree-id15 . -1) 31 (23 . 31) (18 . 23) (12 . 18) (9 . 12) (8 . 9) (7 . 8) (1 . 7) (t 26225 26697 444363 738000)) nil (26225 26819 516074 319000) 0 nil])
([nil nil ((76 . 77)) nil (26225 26819 515970 935000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -92) (undo-tree-id40 . -1) (undo-tree-id41 . -1) 93 (92 . 93) (#(" " 0 1 (fontified t)) . -92) (undo-tree-id42 . -1) (undo-tree-id43 . -1) 93 (82 . 93) (#("t" 0 1 (fontified t)) . -82) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (#("h" 0 1 (fontified t)) . -83) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (#("e" 0 1 (fontified t)) . -84) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#("m" 0 1 (fontified t)) . -85) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("e" 0 1 (fontified t)) . -86) (undo-tree-id52 . -1) (undo-tree-id53 . -1) 87 (78 . 87) (#("F" 0 1 (fontified t)) . -78) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#("o" 0 1 (fontified t)) . -79) (undo-tree-id56 . -1) (#("r" 0 1 (fontified t)) . -80) (undo-tree-id57 . -1) (#("m" 0 1 (fontified t)) . -81) (undo-tree-id58 . -1) 82 (74 . 82) (69 . 74) (t 26225 26819 524840 803000) 41) nil (26226 7251 849547 262000) 0 nil])
([nil nil ((#("    platformTheme.name
" 0 22 (fontified t) 22 23 (fontified t)) . 70) (undo-tree-id31 . 1) (undo-tree-id32 . -22) (undo-tree-id33 . -21) (undo-tree-id34 . -21) (undo-tree-id35 . -21) (undo-tree-id36 . -21) (undo-tree-id37 . -21) (undo-tree-id38 . -21) (undo-tree-id39 . -23) 91) nil (26226 7251 849517 717000) 0 nil])
([nil nil ((#("kde" 0 3 (face font-lock-string-face fontified t)) . 64) (undo-tree-id29 . -2) (undo-tree-id30 . -3)) nil (26226 7251 849504 974000) 0 nil])
([nil nil ((64 . 68)) nil (26226 7251 849501 107000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -71) (undo-tree-id23 . -4) (undo-tree-id24 . -4) (undo-tree-id25 . -4) (undo-tree-id26 . -4) (undo-tree-id27 . -4) (undo-tree-id28 . -4) 75 (70 . 75) 67) nil (26226 7251 849498 171000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 71) (undo-tree-id16 . 1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1)) nil (26226 7251 849482 202000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -119) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("e" 0 1 (fontified t)) . -120) (undo-tree-id70 . -1) (undo-tree-id71 . -1) 121 (114 . 121) (107 . 114) (91 . 107) (84 . 91) (78 . 84) (#("[" 0 1 (fontified t)) . -78) (undo-tree-id72 . -1) (#("e" 0 1 (fontified t)) . -79) (undo-tree-id73 . -1) 80 (76 . 80) (#("a" 0 1 (fontified t)) . -76) (undo-tree-id74 . -1) (#("t" 0 1 (fontified t)) . -77) (undo-tree-id75 . -1) 78 (75 . 78) (70 . 75) (t 26226 7251 858326 835000) 63) nil (26226 7359 725371 794000) 0 nil])
([nil nil ((#("      packa
" 0 11 (fontified t) 11 12 (fontified t)) . 108) (undo-tree-id59 . 1) (undo-tree-id60 . -11) (undo-tree-id61 . -10) (undo-tree-id62 . -10) (undo-tree-id63 . -10) (undo-tree-id64 . -10) (undo-tree-id65 . -10) (undo-tree-id66 . -10) (undo-tree-id67 . -12) 118) nil (26226 7359 725350 626000) 0 nil])
([nil nil ((#("breeze" 0 6 (face font-lock-string-face fontified t)) . 99) (undo-tree-id76 . -5) (undo-tree-id77 . -6) (t 26226 7359 730243 463000)) nil (26226 7460 493326 705000) 0 nil])
([nil nil ((99 . 106)) nil (26226 7460 493295 318000) 0 nil])
([nil nil ((#("      " 0 6 (fontified t)) . -109) (undo-tree-id90 . -6) (undo-tree-id91 . -6) (undo-tree-id92 . -6) (undo-tree-id93 . -6) 115 (108 . 115) (t 26226 7460 501608 740000) 105) nil (26226 7500 167108 238000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 109) (undo-tree-id88 . 1) (undo-tree-id89 . -1)) nil (26226 7500 167102 708000) 0 nil])
([nil nil ((117 . 118) (#("  " 0 2 (fontified nil)) . -116) (undo-tree-id84 . -2) (undo-tree-id85 . -2) (undo-tree-id86 . -2) (undo-tree-id87 . -2) (118 . 119) (113 . 118) 111) nil (26226 7500 167098 952000) 0 nil])
([nil nil ((113 . 114) (109 . 113) (#("  " 0 2 (fontified t)) . 109) (undo-tree-id80 . -2) (undo-tree-id81 . -2) (undo-tree-id82 . -2) (undo-tree-id83 . -2) 111) nil (26226 7500 167091 568000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . 113) (undo-tree-id78 . -1) (undo-tree-id79 . -1)) nil (26226 7500 167078 545000) 0 nil])
([nil nil ((#("G" 0 1 (face font-lock-string-face fontified t)) . -213) (undo-tree-id102 . -1) 214 (207 . 214) (200 . 207) (199 . 200) (190 . 199) (#(" " 0 1 (face font-lock-string-face fontified t)) . -190) (undo-tree-id103 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -191) (undo-tree-id104 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -192) (undo-tree-id105 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -193) (undo-tree-id106 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -194) (undo-tree-id107 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -195) (undo-tree-id108 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -196) (undo-tree-id109 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -197) (undo-tree-id110 . -1) 198 (#(" " 0 1 (face font-lock-string-face fontified t)) . -198) (undo-tree-id111 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -199) (undo-tree-id112 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -200) (undo-tree-id113 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -201) (undo-tree-id114 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -202) (undo-tree-id115 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -203) (undo-tree-id116 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -204) (undo-tree-id117 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -205) (undo-tree-id118 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -206) (undo-tree-id119 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -207) (undo-tree-id120 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -208) (undo-tree-id121 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -209) (undo-tree-id122 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -210) (undo-tree-id123 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -211) (undo-tree-id124 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -212) (undo-tree-id125 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -213) (undo-tree-id126 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -214) (undo-tree-id127 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -215) (undo-tree-id128 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -216) (undo-tree-id129 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -217) (undo-tree-id130 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -218) (undo-tree-id131 . -1) 219 (187 . 219) (#(" " 0 1 (face font-lock-string-face fontified t)) . -187) (undo-tree-id132 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -188) (undo-tree-id133 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -189) (undo-tree-id134 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -190) (undo-tree-id135 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -191) (undo-tree-id136 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -192) (undo-tree-id137 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -193) (undo-tree-id138 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -194) (undo-tree-id139 . -1) 195 (#(" " 0 1 (face font-lock-string-face fontified t)) . -195) (undo-tree-id140 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -196) (undo-tree-id141 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -197) (undo-tree-id142 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -198) (undo-tree-id143 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -199) (undo-tree-id144 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -200) (undo-tree-id145 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -201) (undo-tree-id146 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -202) (undo-tree-id147 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -203) (undo-tree-id148 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -204) (undo-tree-id149 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -205) (undo-tree-id150 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -206) (undo-tree-id151 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -207) (undo-tree-id152 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -208) (undo-tree-id153 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -209) (undo-tree-id154 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -210) (undo-tree-id155 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -211) (undo-tree-id156 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -212) (undo-tree-id157 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -213) (undo-tree-id158 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -214) (undo-tree-id159 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -215) (undo-tree-id160 . -1) 216 (#(" " 0 1 (face font-lock-string-face fontified t)) . -216) (undo-tree-id161 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -217) (undo-tree-id162 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -218) (undo-tree-id163 . -1) 219 (187 . 219) (183 . 187) (#("[" 0 1 (face font-lock-string-face fontified t)) . -183) (undo-tree-id164 . -1) 184 (183 . 184) (182 . 183) (178 . 182) (#(" " 0 1 (fontified t)) . -178) (undo-tree-id165 . -1) (#("=" 0 1 (fontified t)) . -179) (undo-tree-id166 . -1) 180 (172 . 180) (#(";" 0 1 (fontified t)) . -172) (undo-tree-id167 . -1) 173 (166 . 173) (155 . 166) (#("/" 0 1 (face font-lock-string-face fontified t)) . -155) (undo-tree-id168 . -1) (#("k" 0 1 (face font-lock-string-face fontified t)) . -156) (undo-tree-id169 . -1) (#("v" 0 1 (face font-lock-string-face fontified t)) . -157) (undo-tree-id170 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -158) (undo-tree-id171 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -159) (undo-tree-id172 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -160) (undo-tree-id173 . -1) (#("u" 0 1 (face font-lock-string-face fontified t)) . -161) (undo-tree-id174 . -1) (#("m" 0 1 (face font-lock-string-face fontified t)) . -162) (undo-tree-id175 . -1) 163 (146 . 163) (#("'" 0 1 (fontified t)) . -146) (undo-tree-id176 . -1) 147 (146 . 147) (141 . 146) (128 . 141) (123 . 128) (120 . 123) (t 26226 7500 175145 320000) 118) nil (26226 7923 427888 651000) 0 nil])
([nil nil ((#("    \"Kvantum/kvantum.kvconfig\".text = ''
       [General]
" 0 4 (fontified t) 4 5 (face font-lock-string-face fontified t nix-string-type 34 syntax-table (15)) 5 29 (face font-lock-string-face fontified t) 29 30 (face font-lock-string-face fontified t nix-string-type 34 syntax-table (15)) 30 31 (fontified t) 31 35 (face nix-attribute-face fontified t) 35 38 (fontified t) 38 39 (face font-lock-string-face fontified t nix-string-type 39 syntax-table (15)) 39 41 (face font-lock-string-face fontified t) 41 58 (face font-lock-string-face fontified t)) . 142) (undo-tree-id100 . -57) (undo-tree-id101 . -12) 154) nil (26226 7923 427776 259000) 0 nil])
([nil nil ((#("       theme=
" 0 7 (fontified t) 7 12 (face nix-attribute-face fontified t) 12 13 (fontified t) 13 14 (fontified t)) . 142) (undo-tree-id97 . 1) (undo-tree-id98 . -13) (undo-tree-id99 . -12) 154) nil (26226 7923 427771 9000) 0 nil])
([nil nil ((#("  xdg.configFile = {
" 0 2 (fontified t) 2 16 (face nix-attribute-face fontified t) 16 21 (fontified t)) . 121) (undo-tree-id96 . -20)) nil (26226 7923 427762 32000) 0 nil])
([nil nil ((#("kvantum" 0 7 (face font-lock-string-face fontified t)) . 99) (undo-tree-id94 . -6) (undo-tree-id95 . -7)) nil (26226 7923 427757 764000) 0 nil])
([nil nil ((99 . 105)) nil (26226 7923 427714 402000) 0 nil])
([nil nil ((#("qtct" 0 4 (face font-lock-string-face fontified t)) . 64) (undo-tree-id192 . -3) (undo-tree-id193 . -4) (t 26226 7923 432026 29000)) nil (26226 8087 2440 854000) 0 nil])
([nil nil ((64 . 67)) nil (26226 8087 2435 705000) 0 nil])
([nil nil ((#("    style = {
      name = \"breeze\";
" 0 4 (fontified t) 4 9 (face nix-attribute-face fontified t) 9 14 (fontified t) 14 20 (fontified t) 20 24 (face nix-attribute-face fontified t) 24 27 (fontified t) 27 28 (nix-string-type 34 syntax-table (15) face font-lock-string-face fontified t) 28 34 (face font-lock-string-face fontified t) 34 35 (nix-string-type 34 syntax-table (15) face font-lock-string-face fontified t) 35 36 (fontified t) 36 37 (fontified t)) . 70) (undo-tree-id186 . -36) (undo-tree-id187 . -12) (undo-tree-id188 . -12) (undo-tree-id189 . -12) (undo-tree-id190 . -12) (undo-tree-id191 . -37) 82) nil (26226 8087 2433 511000) 0 nil])
([nil nil ((#("    };
" 0 4 (fontified t) 4 6 (fontified t) 6 7 (fontified t)) . 70) (undo-tree-id177 . -6) (undo-tree-id178 . -5) (undo-tree-id179 . -6) (undo-tree-id180 . -5) (undo-tree-id181 . -5) (undo-tree-id182 . -5) (undo-tree-id183 . -5) (undo-tree-id184 . -5) (undo-tree-id185 . -7) 75) nil (26226 8087 2417 731000) 0 nil])
([nil nil ((34 . 45) (29 . 34) (17 . 29) (#("a" 0 1 (fontified t)) . -17) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (#("p" 0 1 (fontified t)) . -18) (undo-tree-id205 . -1) (undo-tree-id206 . -1) 19 (12 . 19) (9 . 12) (t 26226 8087 11269 967000) 8) nil (26226 8109 782214 93000) 0 nil])
([nil nil ((49 . 51) (#("," 0 1 (fontified t)) . -49) (undo-tree-id194 . -1) (undo-tree-id195 . -1) 50 (42 . 50) (38 . 42) (#("d" 0 1 (fontified t)) . -38) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (#("k" 0 1 (fontified t)) . -39) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (#("e" 0 1 (fontified t)) . -40) (undo-tree-id200 . -1) (undo-tree-id201 . -1) 41 (38 . 41) (#("d" 0 1 (fontified t)) . -38) (undo-tree-id202 . -1) 39 (28 . 39)) nil (26226 8109 782204 986000) 0 nil])
([nil nil ((2 . 8)) nil (26226 8109 782167 657000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . 69) (undo-tree-id209 . -1) (t 26226 8109 787051 108000)) nil (26226 8116 524808 651000) 0 nil])
([nil nil ((#("dark" 0 4 (fontified t)) . 69) (undo-tree-id207 . -3) (undo-tree-id208 . -4)) nil (26226 8116 524797 560000) 0 nil])
([nil nil ((92 . 93) (#("  " 0 2 (fontified nil)) . -91) (undo-tree-id210 . -2) (undo-tree-id211 . -2) (93 . 94) (88 . 93) (74 . 88) (69 . 74) (t 26226 8116 533979 492000) 68) nil (26226 8132 843779 241000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -161) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("d" 0 1 (fontified t)) . -162) (undo-tree-id13 . -1) (undo-tree-id14 . -1) 163 (161 . 163) (158 . 161) (t 26226 8132 848878 760000) 156) nil (26227 26940 113154 760000) 0 nil])
([nil nil ((#("  
" 0 2 (fontified t) 2 3 (fontified t)) . 159) (undo-tree-id2 . -1) (undo-tree-id3 . 1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -3) (undo-tree-id10 . -2) 160) nil (26227 26940 113146 945000) 0 nil])
([nil nil ((132 . 143) (#("6" 0 1 (fontified t)) . -132) (undo-tree-id0 . -1) 133 (120 . 133) (119 . 120) (114 . 119) (104 . 114) (#(" " 0 1 (fontified t)) . -104) (undo-tree-id1 . -1) 105 (93 . 105) (88 . 93) 71) nil (26227 26940 113128 600000) 0 nil])
([nil nil ((#("kdePackages" 0 11 (fontified t)) . 93) (undo-tree-id17 . -10) (undo-tree-id18 . -11) (t 26227 26940 122884 676000)) nil (26227 26957 464752 841000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 93) (undo-tree-id15 . -1) (undo-tree-id16 . -1)) nil (26227 26957 464742 882000) 0 nil])
([nil nil ((198 . 200) (#("]" 0 1 (fontified t)) . -198) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#(";" 0 1 (fontified t)) . -199) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) 200 (199 . 200) (#("    " 0 4 (fontified nil)) . -198) (undo-tree-id40 . -4) (undo-tree-id41 . -4) (202 . 203) (195 . 202) (186 . 195) (#("e" 0 1 (fontified t)) . -186) (undo-tree-id42 . -1) 187 (182 . 187) (177 . 182) (175 . 177) (#("." 0 1 (fontified t)) . -175) (undo-tree-id43 . -1) (#("q" 0 1 (fontified t)) . -176) (undo-tree-id44 . -1) (#("t" 0 1 (fontified t)) . -177) (undo-tree-id45 . -1) 178 (173 . 178) (168 . 173) (#("x" 0 1 (fontified t)) . -168) (undo-tree-id46 . -1) 169 (165 . 169) (#("q" 0 1 (fontified t)) . -165) (undo-tree-id47 . -1) 166 (160 . 166) (139 . 160) (136 . 139) (t 26227 26957 473734 522000) 134) nil (26227 26986 93961 871000) 0 nil])
([nil nil ((198 . 199) (#("}" 0 1 (fontified t)) . 198) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1)) nil (26227 26986 93927 415000) 0 nil])
([nil nil ((176 . 177) (#("{" 0 1 (fontified t)) . 176) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1)) nil (26227 26986 93921 794000) 0 nil])
([nil nil ((175 . 176)) nil (26227 26986 93917 286000) 0 nil])
([nil current ((#("    libsForQt5.qt5.qtwayland
" 0 28 (fontified t) 28 29 (fontified t)) . 103) (undo-tree-id19 . -28) (undo-tree-id20 . -28) (undo-tree-id21 . -27) (undo-tree-id22 . -27) (undo-tree-id23 . -27) (undo-tree-id24 . -27) (undo-tree-id25 . -29) 130) nil (26227 26986 93909 721000) 0 nil])
nil
