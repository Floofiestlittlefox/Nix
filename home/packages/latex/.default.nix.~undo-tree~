(undo-tree-save-format-version . 1)
"ed2048b6c0622fd5e5b0b5942bc17272044e557f"
[nil nil nil nil (26225 15644 867505 325000) 0 nil]
([nil nil ((1 . 2) (t . -1)) nil (26225 15644 867503 562000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 1) (undo-tree-id30 . -1)) nil (26225 15644 867502 330000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -115) (undo-tree-id0 . -1) (116 . 117) (#(" " 0 1 (fontified t)) . -116) (undo-tree-id1 . -1) 117 (114 . 117) (113 . 114) (#("  " 0 2 (fontified nil)) . -112) (undo-tree-id2 . -2) (114 . 115) (109 . 114) (108 . 109) (#("'" 0 1 (fontified t)) . -108) (undo-tree-id3 . -1) 109 (108 . 109) (107 . 108) (86 . 107) (#("-" 0 1 (fontified t)) . -86) (undo-tree-id4 . -1) 87 (80 . 87) (#("t" 0 1 (fontified t)) . -80) (undo-tree-id5 . -1) (#("e" 0 1 (fontified t)) . -81) (undo-tree-id6 . -1) (#("x" 0 1 (fontified t)) . -82) (undo-tree-id7 . -1) (#("l" 0 1 (fontified t)) . -83) (undo-tree-id8 . -1) (#("i" 0 1 (fontified t)) . -84) (undo-tree-id9 . -1) (#("v" 0 1 (fontified t)) . -85) (undo-tree-id10 . -1) (#("e" 0 1 (fontified t)) . -86) (undo-tree-id11 . -1) 87 (75 . 87) (#("t" 0 1 (fontified t)) . -75) (undo-tree-id12 . -1) (#("e" 0 1 (fontified t)) . -76) (undo-tree-id13 . -1) (#("x" 0 1 (fontified t)) . -77) (undo-tree-id14 . -1) (#("l" 0 1 (fontified t)) . -78) (undo-tree-id15 . -1) (#("i" 0 1 (fontified t)) . -79) (undo-tree-id16 . -1) (#("v" 0 1 (fontified t)) . -80) (undo-tree-id17 . -1) (#("e" 0 1 (fontified t)) . -81) (undo-tree-id18 . -1) (#("=" 0 1 (fontified t)) . -82) (undo-tree-id19 . -1) 83 (62 . 83) (57 . 62) (43 . 57) (38 . 43) (27 . 38) (#("." 0 1 (fontified t)) . -27) (undo-tree-id20 . -1) (#("t" 0 1 (fontified t)) . -28) (undo-tree-id21 . -1) (#("e" 0 1 (fontified t)) . -29) (undo-tree-id22 . -1) (#("x" 0 1 (fontified t)) . -30) (undo-tree-id23 . -1) 31 (27 . 31) (#("." 0 1 (fontified t)) . -27) (undo-tree-id24 . -1) (#("t" 0 1 (fontified t)) . -28) (undo-tree-id25 . -1) (#("e" 0 1 (fontified t)) . -29) (undo-tree-id26 . -1) 30 (26 . 30) (#(" " 0 1 (fontified t)) . -26) (undo-tree-id27 . -1) (#("=" 0 1 (fontified t)) . -27) (undo-tree-id28 . -1) (#(" " 0 1 (fontified t)) . -28) (undo-tree-id29 . -1) 29 (18 . 29) (15 . 18) (14 . 15) (13 . 14) (1 . 13) (t 26225 15443 350146 385000)) nil (26225 15644 867494 55000) 0 nil])
([nil nil ((116 . 117)) nil (26225 15644 867431 502000) 0 nil])
([nil nil ((139 . 145) (134 . 139) (121 . 134) (#("-" 0 1 (fontified t)) . -121) (undo-tree-id31 . -1) (undo-tree-id32 . -1) 122 (121 . 122) (117 . 121) (114 . 117) (t 26225 15644 872387 414000) 113) nil (26225 15672 634358 330000) 0 nil])
([nil nil ((133 . 144)) nil (26225 15672 634336 701000) 0 nil])
([nil nil ((160 . 161) (#(" " 0 1 (fontified nil)) . -159) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (160 . 161) (#(" " 0 1 (fontified t)) . -160) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) 161 (156 . 161) (t 26225 15672 642024 695000) 155) nil (26225 15674 981667 381000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -115) (undo-tree-id41 . -2) (undo-tree-id42 . -2) (undo-tree-id43 . -2) (undo-tree-id44 . -2) 117 (114 . 117) (t 26225 15674 984946 857000) 110) nil (26225 15752 430131 103000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -158) (undo-tree-id1 . -4) (undo-tree-id2 . -4) (undo-tree-id3 . -4) (undo-tree-id4 . -4) 162 (157 . 162) (t 26225 15752 431614 128000) 150) nil (26227 38757 596068 31000) 0 nil])
([nil nil ((nil rear-nonsticky nil 160 . 161) (#("
" 0 1 (fontified nil)) . -167) (158 . 168)) nil (26227 38757 596058 544000) 0 nil])
([nil current ((#("
" 0 1 (fontified t)) . 158) (undo-tree-id0 . -1)) nil (26227 38757 596049 797000) 0 nil])
nil
