(undo-tree-save-format-version . 1)
"2c7f80b2f5b1de6b11e15a1646fc114a4f8cea78"
[nil nil nil nil (26225 15862 554427 330000) 0 nil]
([nil nil ((#("  " 0 2 (fontified nil)) . -51) (undo-tree-id13 . -2) (53 . 54) (49 . 53) (#("    " 0 4 (fontified nil)) . 48) (undo-tree-id14 . -4) (47 . 53) (46 . 47) (#("]" 0 1 (fontified t)) . -46) (undo-tree-id15 . -1) 47 (39 . 47) (#(";" 0 1 (fontified t)) . -39) (undo-tree-id16 . -1) (#(" " 0 1 (fontified t)) . -40) (undo-tree-id17 . -1) 41 (27 . 41) (#("a" 0 1 (fontified t)) . -27) (undo-tree-id18 . -1) (#("k" 0 1 (fontified t)) . -28) (undo-tree-id19 . -1) 29 (19 . 29) (17 . 19) (#("  " 0 2 (fontified nil)) . 16) (undo-tree-id20 . -2) (18 . 19) (15 . 18) (14 . 15) (13 . 14) (1 . 13) (t . -1)) nil (26225 15862 554424 94000) 0 nil])
([nil nil ((48 . 53) 48) nil (26225 15862 554413 645000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 48)) nil (26225 15862 554412 833000) 0 nil])
([nil nil ((66 . 71) (57 . 66) (#("j" 0 1 (fontified t)) . -57) (undo-tree-id7 . -1) 58 (52 . 58) (#("k" 0 1 (fontified t)) . -52) (undo-tree-id8 . -1) (#("a" 0 1 (fontified t)) . -53) (undo-tree-id9 . -1) (#("n" 0 1 (fontified t)) . -54) (undo-tree-id10 . -1) (#("j" 0 1 (fontified t)) . -55) (undo-tree-id11 . -1) (#("i" 0 1 (fontified t)) . -56) (undo-tree-id12 . -1) 57 (52 . 57)) nil (26225 15862 554411 280000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 67) (undo-tree-id4 . -3) (undo-tree-id5 . 1) (undo-tree-id6 . -4) 70) nil (26225 15862 554401 692000) 0 nil])
([nil nil ((70 . 71)) nil (26225 15862 554398 5000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -67) (undo-tree-id3 . -4) 71 (66 . 71) 51) nil (26225 15862 554396 913000) 0 nil])
([nil nil ((#("pkgs" 0 4 (fontified t)) . 52) (undo-tree-id2 . -3)) nil (26225 15862 554394 228000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 52)) nil (26225 15862 554391 623000) 0 nil])
([nil nil ((67 . 68)) nil (26225 15862 554390 351000) 0 nil])
([nil nil ((58 . 64) (#("j" 0 1 (fontified t)) . -58) (undo-tree-id0 . -1) (#("i" 0 1 (fontified t)) . -59) (undo-tree-id1 . -1) 60 (52 . 60) (47 . 52) (t 26225 15829 594756 669000) 21) nil (26225 15862 554385 241000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 79) (undo-tree-id33 . -1) (t 26225 15862 561879 250000)) nil (26225 16283 930971 122000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -84) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (85 . 86) (#(" " 0 1 (fontified t)) . -85) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) 86 (83 . 86) 81) nil (26225 16283 930967 615000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -84) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (undo-tree-id23 . -2) (undo-tree-id24 . -2) 86 (83 . 86) 80) nil (26225 16283 930949 572000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -115) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (#("k" 0 1 (fontified t)) . -116) (undo-tree-id46 . -1) (undo-tree-id47 . -1) 117 (116 . 117) (115 . 116) (#("f" 0 1 (fontified t)) . -43) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#("c" 0 1 (fontified t)) . -44) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("i" 0 1 (fontified t)) . -45) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#("t" 0 1 (fontified t)) . -46) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#("x" 0 1 (fontified t)) . -47) (undo-tree-id56 . -1) (undo-tree-id57 . -1) 48 (43 . 48) (38 . 43) (22 . 38) (#(" " 0 1 (fontified t)) . -22) (undo-tree-id58 . -1) (undo-tree-id59 . -1) 23 (18 . 23) (15 . 18) (t 26225 16283 938970 59000) 14) nil (26225 16318 103111 47000) 0 nil])
([nil nil ((176 . 177) (#(" " 0 1 (fontified nil)) . -175) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (176 . 177) (#(" " 0 1 (fontified t)) . -176) (undo-tree-id36 . -1) (undo-tree-id37 . -1) 177 (172 . 177) (170 . 172) (149 . 170) (#("n" 0 1 (fontified t)) . -149) (undo-tree-id38 . -1) (undo-tree-id39 . -1) 150 (149 . 150) (144 . 149) (136 . 144) (115 . 136) (113 . 115) (#("  " 0 2 (fontified nil)) . 112) (undo-tree-id40 . -2) (undo-tree-id41 . -2) (undo-tree-id42 . -2) (undo-tree-id43 . -2) (114 . 115) (111 . 114) 107) nil (26225 16318 103083 776000) 0 nil])
([nil nil ((201 . 202) (#(" " 0 1 (fontified nil)) . -200) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (201 . 202) (#(" " 0 1 (fontified t)) . -201) (undo-tree-id62 . -1) (undo-tree-id63 . -1) 202 (193 . 202) (183 . 193) (174 . 183) (163 . 174) (154 . 163) (139 . 154) (#(" " 0 1 (fontified t)) . -139) (undo-tree-id64 . -1) (undo-tree-id65 . -1) 140 (139 . 140) (136 . 139) (#("s" 0 1 (fontified t)) . -136) (undo-tree-id66 . -1) 137 (132 . 137) (#(" " 0 1 (fontified t)) . -132) (undo-tree-id67 . -1) (#("=" 0 1 (fontified t)) . -133) (undo-tree-id68 . -1) (#(" " 0 1 (fontified t)) . -134) (undo-tree-id69 . -1) 135 (133 . 135) (131 . 133) (#("t" 0 1 (fontified t)) . -131) (undo-tree-id70 . -1) (#("5" 0 1 (fontified t)) . -132) (undo-tree-id71 . -1) 133 (126 . 133) (#("c" 0 1 (fontified t)) . -126) (undo-tree-id72 . -1) 127 (126 . 127) (#("i" 0 1 (fontified t)) . -126) (undo-tree-id73 . -1) (#("b" 0 1 (fontified t)) . -127) (undo-tree-id74 . -1) 128 (126 . 128) (119 . 126) (106 . 119) (#(" " 0 1 (fontified t)) . -106) (undo-tree-id75 . -1) (#("=" 0 1 (fontified t)) . -107) (undo-tree-id76 . -1) 108 (100 . 108) (93 . 100) (92 . 93) (84 . 92) (#("d" 0 1 (fontified t)) . -84) (undo-tree-id77 . -1) 85 (83 . 85) (#(" " 0 1 (fontified t)) . -83) (undo-tree-id78 . -1) 84 (78 . 84) (73 . 78) (65 . 73) (#("-" 0 1 (face font-lock-string-face fontified t)) . -65) (undo-tree-id79 . -1) 66 (63 . 66) (43 . 63) (t 26225 16318 106872 590000)) nil (26225 16463 731040 675000) 0 nil])
([nil nil ((208 . 209) (#(" " 0 1 (fontified nil)) . -207) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (208 . 209) (#(" " 0 1 (fontified t)) . -208) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) 209 (202 . 209) (t 26225 16463 739373 488000) 201) nil (26225 16480 565635 172000) 0 nil])
([nil nil ((213 . 214) (#("  " 0 2 (fontified nil)) . -212) (undo-tree-id80 . -2) (undo-tree-id81 . -2) (undo-tree-id82 . -2) (undo-tree-id83 . -2) (214 . 215) (209 . 214) 208) nil (26225 16480 565618 541000) 0 nil])
([nil nil ((282 . 287) (277 . 282) (t 26225 16480 574312 648000) 276) nil (26225 16672 571513 516000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -362) (undo-tree-id92 . -1) (#("c" 0 1 (fontified t)) . -363) (undo-tree-id93 . -1) (#("i" 0 1 (fontified t)) . -364) (undo-tree-id94 . -1) (#("e" 0 1 (fontified t)) . -365) (undo-tree-id95 . -1) (#("n" 0 1 (fontified t)) . -366) (undo-tree-id96 . -1) (#("t" 0 1 (fontified t)) . -367) (undo-tree-id97 . -1) 368 (362 . 368) (t 26225 16672 576155 171000)) nil (26225 26225 313252 853000) 0 nil])
([nil nil ((#("" 0 1 (fontified t)) . -373) (undo-tree-id186 . -1) 374 (373 . 374) (368 . 373) (361 . 368) (358 . 361) (t 26225 26225 322471 406000) 354) nil (26225 26608 707131 737000) 0 nil])
([nil nil ((nil rear-nonsticky nil 646 . 647) (nil fontified nil 373 . 647) (373 . 647) 372) nil (26225 26608 707126 357000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -541) (undo-tree-id128 . -1) (undo-tree-id129 . -1) 542 (#(" " 0 1 (fontified t)) . -542) (undo-tree-id130 . -1) (undo-tree-id131 . -1) 543 (#(" " 0 1 (fontified t)) . -543) (undo-tree-id132 . -1) (undo-tree-id133 . -1) 544 (#(" " 0 1 (fontified t)) . -544) (undo-tree-id134 . -1) (undo-tree-id135 . -1) 545 (#(" " 0 1 (fontified t)) . -545) (undo-tree-id136 . -1) (undo-tree-id137 . -1) 546 (#(" " 0 1 (fontified t)) . -546) (undo-tree-id138 . -1) (undo-tree-id139 . -1) 547 (#(" " 0 1 (fontified t)) . -547) (undo-tree-id140 . -1) 548 (#(" " 0 1 (fontified t)) . -548) (undo-tree-id141 . -1) 549 (#(" " 0 1 (fontified t)) . -549) (undo-tree-id142 . -1) 550 (#(" " 0 1 (fontified t)) . -550) (undo-tree-id143 . -1) 551 (#(" " 0 1 (fontified t)) . -551) (undo-tree-id144 . -1) 552 (#(" " 0 1 (fontified t)) . -552) (undo-tree-id145 . -1) 553 (#(" " 0 1 (fontified t)) . -553) (undo-tree-id146 . -1) 554 (#(" " 0 1 (fontified t)) . -513) 514 (#(" " 0 1 (fontified t)) . -514) 515 (#(" " 0 1 (fontified t)) . -515) 516 (#(" " 0 1 (fontified t)) . -516) 517 (#(" " 0 1 (fontified t)) . -517) 518 (#(" " 0 1 (fontified t)) . -518) 519 (#(" " 0 1 (fontified t)) . -519) 520 (#(" " 0 1 (fontified t)) . -520) 521 (#(" " 0 1 (fontified t)) . -521) 522 (#(" " 0 1 (fontified t)) . -522) 523 (#(" " 0 1 (fontified t)) . -523) 524 (#(" " 0 1 (fontified t)) . -524) 525 (#(" " 0 1 (fontified t)) . -525) 526 (#(" " 0 1 (fontified t)) . -488) 489 (#(" " 0 1 (fontified t)) . -489) 490 (#(" " 0 1 (fontified t)) . -490) 491 (#(" " 0 1 (fontified t)) . -491) 492 (#(" " 0 1 (fontified t)) . -492) 493 (#(" " 0 1 (fontified t)) . -493) 494 (#(" " 0 1 (fontified t)) . -494) 495 (#(" " 0 1 (fontified t)) . -495) 496 (#(" " 0 1 (fontified t)) . -496) 497 (#(" " 0 1 (fontified t)) . -497) 498 (#(" " 0 1 (fontified t)) . -498) 499 (#(" " 0 1 (fontified t)) . -499) 500 (#(" " 0 1 (fontified t)) . -500) 501 (#(" " 0 1 (face font-lock-string-face fontified t)) . -481) 482 (#(" " 0 1 (face font-lock-string-face fontified t)) . -482) 483 (#(" " 0 1 (face font-lock-string-face fontified t)) . -483) 484 (#(" " 0 1 (face font-lock-string-face fontified t)) . -484) 485 (#(" " 0 1 (face font-lock-string-face fontified t)) . -485) 486 (#(" " 0 1 (face font-lock-string-face fontified t)) . -486) 487 (#(" " 0 1 (face font-lock-string-face fontified t)) . -487) 488 (#(" " 0 1 (face font-lock-string-face fontified t)) . -488) 489 (#(" " 0 1 (face font-lock-string-face fontified t)) . -489) 490 (#(" " 0 1 (face font-lock-string-face fontified t)) . -490) 491 (#(" " 0 1 (face font-lock-string-face fontified t)) . -491) 492 (#(" " 0 1 (face font-lock-string-face fontified t)) . -492) 493 (#(" " 0 1 (face font-lock-string-face)) . -493) 494 (#(" " 0 1 (face font-lock-string-face fontified t)) . -456) 457 (#(" " 0 1 (face font-lock-string-face fontified t)) . -457) 458 (#(" " 0 1 (face font-lock-string-face fontified t)) . -458) 459 (#(" " 0 1 (face font-lock-string-face fontified t)) . -459) 460 (#(" " 0 1 (face font-lock-string-face fontified t)) . -460) 461 (#(" " 0 1 (face font-lock-string-face fontified t)) . -461) 462 (#(" " 0 1 (face font-lock-string-face fontified t)) . -462) 463 (#(" " 0 1 (face font-lock-string-face fontified t)) . -463) 464 (#(" " 0 1 (face font-lock-string-face fontified t)) . -464) 465 (#(" " 0 1 (face font-lock-string-face fontified t)) . -465) 466 (#(" " 0 1 (face font-lock-string-face fontified t)) . -466) 467 (#(" " 0 1 (face font-lock-string-face fontified t)) . -467) 468 (#(" " 0 1 (face font-lock-string-face)) . -468) 469 (#(" " 0 1 (fontified t)) . -431) 432 (#(" " 0 1 (fontified t)) . -432) 433 (#(" " 0 1 (fontified t)) . -433) 434 (#(" " 0 1 (fontified t)) . -434) 435 (#(" " 0 1 (fontified t)) . -435) 436 (#(" " 0 1 (fontified t)) . -436) 437 (#(" " 0 1 (fontified t)) . -437) 438 (#(" " 0 1 (fontified t)) . -438) 439 (#(" " 0 1 (fontified t)) . -439) 440 (#(" " 0 1 (fontified t)) . -440) 441 (#(" " 0 1 (fontified t)) . -441) 442 (#(" " 0 1 (fontified t)) . -442) 443 (#(" " 0 1 (fontified t)) . -443) 444 (#(" " 0 1 (fontified t)) . -425) 426 (#(" " 0 1 (fontified t)) . -426) 427 (#(" " 0 1 (fontified t)) . -427) 428 (#(" " 0 1 (fontified t)) . -428) 429 (#(" " 0 1 (fontified t)) . -429) 430 (#(" " 0 1 (fontified t)) . -430) 431 (#(" " 0 1 (fontified t)) . -431) 432 (#(" " 0 1 (fontified t)) . -432) 433 (#(" " 0 1 (fontified t)) . -433) 434 (#(" " 0 1 (fontified t)) . -434) 435 (#(" " 0 1 (fontified t)) . -435) 436 (#(" " 0 1 (fontified t)) . -436) 437 (#(" " 0 1 (fontified t)) . -437) 438 (#(" " 0 1 (fontified t)) . -397) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (#(" " 0 1 (fontified t)) . -398) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (#(" " 0 1 (fontified t)) . -399) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (#(" " 0 1 (fontified t)) . -400) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (#(" " 0 1 (fontified t)) . -401) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (#(" " 0 1 (fontified t)) . -402) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (#(" " 0 1 (fontified t)) . -403) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (#(" " 0 1 (fontified t)) . -404) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (#(" " 0 1 (fontified t)) . -405) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (#(" " 0 1 (fontified t)) . -406) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (#(" " 0 1 (fontified t)) . -407) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (#(" " 0 1 (fontified t)) . -408) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (#(" " 0 1 (fontified t)) . -409) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) 410) nil (26225 26608 707110 236000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 398) (undo-tree-id126 . -1) (undo-tree-id127 . -1)) nil (26225 26608 706906 423000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -421) (undo-tree-id122 . -4) (undo-tree-id123 . -4) (undo-tree-id124 . -4) (undo-tree-id125 . -4) 425 (420 . 425) 398) nil (26225 26608 706903 818000) 0 nil])
([nil nil ((394 . 400) (#("    " 0 4 (fontified t)) . 394) (undo-tree-id111 . -4) (undo-tree-id112 . -4) (undo-tree-id113 . -1) (undo-tree-id114 . -3) (undo-tree-id115 . -3) (undo-tree-id116 . -2) (undo-tree-id117 . -2) (undo-tree-id118 . -4) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) 395) nil (26225 26608 706894 511000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -422) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) 423) nil (26225 26608 706884 452000) 0 nil])
([nil nil (452) nil (26225 26611 58982 771000) 0 nil])
([nil nil ((#("gtk2.extraConfig = ''
     gtk-im-module=fcitx
   '';" 0 16 (face nix-attribute-face fontified t) 16 19 (fontified t) 19 20 (face font-lock-string-face nix-string-type 39 syntax-table (15) fontified t) 20 22 (face font-lock-string-face fontified t) 22 47 (face font-lock-string-face fontified t) 47 50 (face font-lock-string-face fontified t) 50 51 (face font-lock-string-face fontified t) 51 52 (face font-lock-string-face nix-string-type 39 syntax-table (15) fontified t) 52 53 (fontified t)) . 432) (undo-tree-id223 . 53) (undo-tree-id224 . -52) (undo-tree-id225 . -52) (undo-tree-id226 . -52) (undo-tree-id227 . -52) (undo-tree-id228 . -53) (undo-tree-id229 . -50) (undo-tree-id230 . -47) (undo-tree-id231 . -52) (undo-tree-id232 . -53) (undo-tree-id233 . -53) 484) nil (26225 26622 40818 832000) 0 nil] [nil nil ((#("   gtk2.extraConfig = ''
     gtk-im-module=fcitx
" 0 3 (fontified t) 3 19 (face nix-attribute-face fontified t) 19 22 (fontified t) 22 23 (face font-lock-string-face nix-string-type 39 syntax-table (15) fontified t) 23 25 (face font-lock-string-face fontified t) 25 50 (face font-lock-string-face fontified t)) . 429) (undo-tree-id190 . 47) (undo-tree-id191 . -49) (undo-tree-id192 . -3) (undo-tree-id193 . -3) (undo-tree-id194 . -3) (undo-tree-id195 . -3) (undo-tree-id196 . -3) (undo-tree-id197 . -3) (undo-tree-id198 . -50) 432) ((429 . 479)) (26225 26611 58850 202000) 0 nil] [nil nil ((429 . 433) (#("   " 0 3 (fontified t)) . 429) (undo-tree-id98 . -3) (undo-tree-id99 . -3) (undo-tree-id100 . -3) (undo-tree-id101 . -3) 432) ((429 . 432) (#("    " 0 4 (fontified t)) . 429) (undo-tree-id187 . -4) (undo-tree-id188 . -4) (undo-tree-id189 . -4)) (26225 26608 706870 265000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -369) (undo-tree-id219 . -4) (undo-tree-id220 . -4) (undo-tree-id221 . -4) (undo-tree-id222 . -4) 373 (368 . 373) 361) nil (26225 26622 40797 933000) 0 nil])
nil
nil
([nil nil ((nil rear-nonsticky nil 421 . 422) (nil fontified nil 369 . 422) (369 . 422)) nil (26225 26622 40790 599000) 0 nil])
([nil nil ((369 . 373)) nil (26225 26622 40788 515000) 0 nil])
([nil nil ((#("   
" 0 3 (fontified t) 3 4 (fontified t)) . 487) (undo-tree-id199 . -3) (undo-tree-id200 . -2) (undo-tree-id201 . -3) (undo-tree-id202 . -3) (undo-tree-id203 . -3) (undo-tree-id204 . -3) (undo-tree-id205 . -3) (undo-tree-id206 . -3) (undo-tree-id207 . -3) (undo-tree-id208 . -3) (undo-tree-id209 . -3) (undo-tree-id210 . -3) (undo-tree-id211 . -3) (undo-tree-id212 . -2) (undo-tree-id213 . -2) (undo-tree-id214 . -3) (undo-tree-id215 . -2) (undo-tree-id216 . -2) (undo-tree-id217 . -2) (undo-tree-id218 . -4) 489) nil (26225 26622 40779 759000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 546) (undo-tree-id234 . -1) (t 26225 26622 58524 51000)) nil (26225 26623 829397 225000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -359) (undo-tree-id235 . -2) (undo-tree-id236 . -2) (undo-tree-id237 . -2) (undo-tree-id238 . -2) 361 (358 . 361) (t 26225 26623 834543 113000) 356) nil (26225 26636 23962 322000) 0 nil])
([nil nil ((#("il8n.inputMethod = {
    defaultLocale = \"en_AU.UTF-8\";
    inputMethod = {
      enabled = \"fcitx5\";
      fcitx5.addons = with pkgs; [
        fcitx5-mozc
        fcitx5-gtk
      ];
    };
  };
" 0 16 (face nix-attribute-face fontified t) 16 25 (fontified t) 25 38 (face nix-attribute-face fontified t) 38 41 (fontified t) 41 42 (face font-lock-string-face nix-string-type 34 syntax-table (15) fontified t) 42 53 (face font-lock-string-face fontified t) 53 54 (face font-lock-string-face nix-string-type 34 syntax-table (15) fontified t) 54 60 (fontified t) 60 71 (face nix-attribute-face fontified t) 71 82 (fontified t) 82 89 (face nix-attribute-face fontified t) 89 92 (fontified t) 92 93 (face font-lock-string-face nix-string-type 34 syntax-table (15) fontified t) 93 99 (face font-lock-string-face fontified t) 99 100 (face font-lock-string-face nix-string-type 34 syntax-table (15) fontified t) 100 108 (fontified t) 108 121 (face nix-attribute-face fontified t) 121 124 (fontified t) 124 128 (face nix-keyword-face fontified t) 128 197 (fontified t)) . 18) (undo-tree-id67 . -196) (undo-tree-id68 . -196) (undo-tree-id69 . -196) (undo-tree-id70 . -196) 214 (t 26225 26636 33675 20000)) nil (26227 27177 161247 789000) 0 nil])
([nil nil ((#("  
" 0 2 (fontified t) 2 3 (fontified t)) . 16) (undo-tree-id61 . -1) (undo-tree-id62 . -2) (undo-tree-id63 . 1) (undo-tree-id64 . -2) (undo-tree-id65 . -2) (undo-tree-id66 . -2)) nil (26227 27177 161243 161000) 0 nil])
([nil nil ((#("gtk = {
    gtk2.extraConfig = ''
     gtk-im-module=fcitx
   '';
    gtk3.extraConfig = {
      gtk-im-module=\"fcitx\";
   };
   gtk4.extraConfig = { 
     gtk-im-module=\"fcitx\";
   };
" 0 3 (face nix-attribute-face fontified t) 3 12 (fontified t) 12 28 (face nix-attribute-face fontified t) 28 31 (fontified t) 31 32 (face font-lock-string-face fontified t nix-string-type 39 syntax-table (15)) 32 63 (face font-lock-string-face fontified t) 63 64 (face font-lock-string-face fontified t nix-string-type 39 syntax-table (15)) 64 70 (fontified t) 70 86 (face nix-attribute-face fontified t) 86 97 (fontified t) 97 110 (face nix-attribute-face fontified t) 110 111 (fontified t) 111 112 (face font-lock-string-face fontified t nix-string-type 34 syntax-table (15)) 112 117 (face font-lock-string-face fontified t) 117 118 (face font-lock-string-face fontified t nix-string-type 34 syntax-table (15)) 118 129 (fontified t) 129 145 (face nix-attribute-face fontified t) 145 156 (fontified t) 156 169 (face nix-attribute-face fontified t) 169 170 (fontified t) 170 171 (face font-lock-string-face fontified t nix-string-type 34 syntax-table (15)) 171 176 (face font-lock-string-face fontified t) 176 177 (face font-lock-string-face fontified t nix-string-type 34 syntax-table (15)) 177 185 (fontified t)) . 162) (undo-tree-id57 . -184) (undo-tree-id58 . -184) (undo-tree-id59 . -184) (undo-tree-id60 . -184) 346) nil (26227 27177 161234 765000) 0 nil])
([nil nil ((#("  fonts.packages = with pkgs; [
    kanji-stroke-order-font
" 0 2 (fontified t) 2 16 (face nix-attribute-face fontified t) 16 19 (fontified t) 19 23 (face nix-keyword-face fontified t) 23 60 (fontified t)) . 94) (undo-tree-id46 . -11) (undo-tree-id47 . -59) (undo-tree-id48 . -11) (undo-tree-id49 . -11) (undo-tree-id50 . -11) (undo-tree-id51 . -11) (undo-tree-id52 . -11) (undo-tree-id53 . -11) (undo-tree-id54 . -11) (undo-tree-id55 . -11) (undo-tree-id56 . -60) 105) nil (26227 27177 161230 526000) 0 nil])
([nil nil ((#("  ];
" 0 4 (fontified t) 4 5 (fontified t)) . 94) (undo-tree-id33 . -2) (undo-tree-id34 . -2) (undo-tree-id35 . -2) (undo-tree-id36 . -2) (undo-tree-id37 . -4) (undo-tree-id38 . -3) (undo-tree-id39 . -4) (undo-tree-id40 . -3) (undo-tree-id41 . -3) (undo-tree-id42 . -3) (undo-tree-id43 . -3) (undo-tree-id44 . -3) (undo-tree-id45 . -5) 97) nil (26227 27177 161219 385000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 94) (undo-tree-id32 . -1)) nil (26227 27177 161106 760000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -95) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 96) nil (26227 27177 161104 827000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 94) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1)) nil (26227 27177 161095 469000) 0 nil])
([nil nil ((65 . 66) (#("  " 0 2 (fontified nil)) . -64) (undo-tree-id0 . -2) (undo-tree-id1 . -2) (66 . 67) (61 . 66) (52 . 61) (#("m" 0 1 (face nix-constant-face fontified t)) . -52) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("n" 0 1 (face nix-constant-face fontified t)) . -53) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("o" 0 1 (face nix-constant-face fontified t)) . -54) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("t" 0 1 (face nix-constant-face fontified t)) . -55) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("e" 0 1 (face nix-constant-face fontified t)) . -56) (undo-tree-id10 . -1) (undo-tree-id11 . -1) 57 (50 . 57) (45 . 50) (34 . 45) (29 . 34) (18 . 29) (15 . 18) 14) nil (26227 27177 161076 743000) 0 nil])
([nil current ((#("home.packages = with pkgs; [
    tagainijisho
    kanjidraw
    jiten
  ];
" 0 13 (face nix-attribute-face fontified t) 13 16 (fontified t) 16 20 (face nix-keyword-face fontified t) 20 28 (fontified t) 28 29 (fontified t) 29 75 (fontified t)) . 69) (undo-tree-id71 . -75) (undo-tree-id72 . -74) (undo-tree-id73 . -74) (undo-tree-id74 . -74) (undo-tree-id75 . -75) (undo-tree-id76 . -75) (undo-tree-id77 . -74) (undo-tree-id78 . -74) (undo-tree-id79 . -70) (undo-tree-id80 . -74) (undo-tree-id81 . -74) (undo-tree-id82 . -74) (undo-tree-id83 . -75) (undo-tree-id84 . -75) 143 (t 26227 27177 170545 815000)) nil (26227 27211 417534 32000) 0 nil])
([nil nil ((nil rear-nonsticky nil 143 . 144) (nil fontified nil 69 . 144) (69 . 144) 68) ((#("home.packages = with pkgs; [
    tagainijisho
    kanjidraw
    jiten
  ];
" 0 13 (face nix-attribute-face fontified nil) 13 16 (fontified nil) 16 20 (face nix-keyword-face fontified nil) 20 70 (fontified nil) 70 74 (fontified nil) 74 75 (fontified nil rear-nonsticky nil)) . 69) (undo-tree-id85 . -75) (undo-tree-id86 . -74) (undo-tree-id87 . -75) (undo-tree-id88 . -75) (undo-tree-id89 . -75) (nil fontified t 89 . 139) (nil fontified t 85 . 89) (nil fontified t 82 . 85) (nil fontified t 69 . 82) (nil rear-nonsticky t 143 . 144)) (26227 27211 417374 137000) 0 nil])
nil
