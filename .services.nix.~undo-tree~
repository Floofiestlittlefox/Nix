(undo-tree-save-format-version . 1)
"da39a3ee5e6b4b0d3255bfef95601890afd80709"
[nil nil nil nil (26226 8735 828013 812000) 0 nil]
([nil nil ((#("	systemd = {
		  user.services.polkit-kde-agent-1 = {
" 0 1 (fontified t) 1 8 (face nix-attribute-face fontified t) 8 17 (fontified t) 17 49 (face nix-attribute-face fontified t) 49 54 (fontified t)) . 1429) (undo-tree-id92 . -53) (undo-tree-id93 . -13) (undo-tree-id94 . -4) 1433 (t 26223 41403 945645 892000)) nil (26226 8735 828010 887000) 0 nil])
([nil nil ((#("		    description = \"polkit-kde-agent-1\";
		    wantedBy = [ \"graphical-session.target\" ];
" 0 6 (fontified t) 6 17 (face nix-attribute-face fontified t) 17 18 (fontified t) 18 20 (fontified t) 20 21 (face font-lock-string-face nix-string-type 34 syntax-table (15) fontified t) 21 39 (face font-lock-string-face fontified t) 39 40 (face font-lock-string-face nix-string-type 34 syntax-table (15) fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 48 (fontified t) 48 56 (face nix-attribute-face fontified t) 56 61 (fontified t) 61 62 (nix-string-type 34 syntax-table (15) face font-lock-string-face fontified t) 62 86 (face font-lock-string-face fontified t) 86 87 (nix-string-type 34 syntax-table (15) face font-lock-string-face fontified t) 87 91 (fontified t)) . 1429) (undo-tree-id83 . -90) (undo-tree-id84 . -3) (undo-tree-id85 . -41) (undo-tree-id86 . -3) (undo-tree-id87 . -3) (undo-tree-id88 . -3) (undo-tree-id89 . -3) (undo-tree-id90 . -3) (undo-tree-id91 . -91) 1432) nil (26226 8735 828006 980000) 0 nil])
([nil nil ((#("		    wants = [ \"graphical-session.target\" ];
		    after = [ \"graphical-session.target\" ];
" 0 6 (fontified t) 6 11 (face nix-attribute-face fontified t) 11 16 (fontified t) 16 17 (face font-lock-string-face nix-string-type 34 syntax-table (15) fontified t) 17 41 (face font-lock-string-face fontified t) 41 42 (face font-lock-string-face nix-string-type 34 syntax-table (15) fontified t) 42 45 (fontified t) 45 46 (fontified t) 46 52 (fontified t) 52 57 (face nix-attribute-face fontified t) 57 62 (fontified t) 62 63 (nix-string-type 34 syntax-table (15) face font-lock-string-face fontified t) 63 87 (face font-lock-string-face fontified t) 87 88 (nix-string-type 34 syntax-table (15) face font-lock-string-face fontified t) 88 92 (fontified t)) . 1429) (undo-tree-id74 . -91) (undo-tree-id75 . -3) (undo-tree-id76 . -45) (undo-tree-id77 . -3) (undo-tree-id78 . -3) (undo-tree-id79 . -3) (undo-tree-id80 . -3) (undo-tree-id81 . -3) (undo-tree-id82 . -92) 1432) nil (26226 8735 827995 338000) 0 nil])
([nil nil ((#("		    serviceConfig = {
			Type = \"simple\";
" 0 6 (fontified t) 6 19 (face nix-attribute-face fontified t) 19 23 (fontified t) 23 24 (fontified t) 24 27 (fontified t) 27 31 (face nix-attribute-face fontified t) 31 34 (fontified t) 34 35 (nix-string-type 34 syntax-table (15) face font-lock-string-face fontified t) 35 41 (face font-lock-string-face fontified t) 41 42 (nix-string-type 34 syntax-table (15) face font-lock-string-face fontified t) 42 44 (fontified t)) . 1429) (undo-tree-id65 . -43) (undo-tree-id66 . -3) (undo-tree-id67 . -23) (undo-tree-id68 . -3) (undo-tree-id69 . -3) (undo-tree-id70 . -3) (undo-tree-id71 . -3) (undo-tree-id72 . -3) (undo-tree-id73 . -44) 1432) nil (26226 8735 827981 402000) 0 nil])
([nil nil ((#("			ExecStart = \"${pkgs.kdePackages.polkit-kde-agent-1}/libexec/polkit-kde-agent-1\";
			Restart = \"on-failure\";
" 0 3 (fontified t) 3 12 (face nix-attribute-face fontified t) 12 15 (fontified t) 15 16 (face font-lock-string-face nix-string-type 34 syntax-table (15) fontified t) 16 17 (face nix-antiquote-face nix-string-type 34 syntax-table (15) fontified t) 17 18 (face nix-antiquote-face nix-syntax-antiquote t nix-string-type 34 fontified t) 18 53 (fontified t) 53 54 (face nix-antiquote-face nix-syntax-antiquote t nix-string-type 34 fontified t) 54 55 (face font-lock-string-face nix-string-type 34 syntax-table (15) fontified t) 55 81 (face font-lock-string-face fontified t) 81 82 (face font-lock-string-face nix-string-type 34 syntax-table (15) fontified t) 82 83 (fontified t) 83 84 (fontified t) 84 87 (fontified t) 87 94 (face nix-attribute-face fontified t) 94 97 (fontified t) 97 98 (nix-string-type 34 syntax-table (15) face font-lock-string-face fontified t) 98 108 (face font-lock-string-face fontified t) 108 109 (nix-string-type 34 syntax-table (15) face font-lock-string-face fontified t) 109 111 (fontified t)) . 1429) (undo-tree-id56 . -110) (undo-tree-id57 . -3) (undo-tree-id58 . -83) (undo-tree-id59 . -3) (undo-tree-id60 . -3) (undo-tree-id61 . -3) (undo-tree-id62 . -3) (undo-tree-id63 . -3) (undo-tree-id64 . -111) 1432) nil (26226 8735 827968 418000) 0 nil])
([nil nil ((#("			RestartSec = 1;
			TimeoutStopSec = 10;
" 0 3 (fontified t) 3 13 (face nix-attribute-face fontified t) 13 18 (fontified t) 18 19 (fontified t) 19 22 (fontified t) 22 36 (face nix-attribute-face fontified t) 36 43 (fontified t)) . 1429) (undo-tree-id47 . -42) (undo-tree-id48 . -3) (undo-tree-id49 . -18) (undo-tree-id50 . -3) (undo-tree-id51 . -3) (undo-tree-id52 . -3) (undo-tree-id53 . -3) (undo-tree-id54 . -3) (undo-tree-id55 . -43) 1432) nil (26226 8735 827958 920000) 0 nil])
([nil nil ((#("		      };
		  };
" 0 10 (fontified t) 10 11 (fontified t) 11 18 (fontified t)) . 1429) (undo-tree-id38 . -17) (undo-tree-id39 . -4) (undo-tree-id40 . -10) (undo-tree-id41 . -4) (undo-tree-id42 . -4) (undo-tree-id43 . -4) (undo-tree-id44 . -4) (undo-tree-id45 . -4) (undo-tree-id46 . -18) 1433) nil (26226 8735 827942 831000) 0 nil])
([nil nil ((#("

" 0 1 (fontified t) 1 2 (fontified t)) . 1429) (undo-tree-id36 . -1) (undo-tree-id37 . -2)) nil (26226 8735 827934 84000) 0 nil])
([nil nil ((#("		user.services.appimage-menu-updater = {
			enable = true;
" 0 2 (fontified t) 2 37 (face nix-attribute-face fontified t) 37 41 (fontified t) 41 42 (fontified t) 42 45 (fontified t) 45 51 (face nix-attribute-face fontified t) 51 54 (fontified t) 54 58 (face nix-builtin-face fontified t) 58 60 (fontified t)) . 1429) (undo-tree-id33 . -59) (undo-tree-id34 . -41) (undo-tree-id35 . -60)) nil (26226 8735 827931 429000) 0 nil])
([nil nil ((#("			description = \"AppImage Menu Updater\";
			unitConfig = {
" 0 3 (fontified t) 3 14 (face nix-attribute-face fontified t) 14 17 (fontified t) 17 18 (face font-lock-string-face nix-string-type 34 syntax-table (15) fontified t) 18 39 (face font-lock-string-face fontified t) 39 40 (face font-lock-string-face nix-string-type 34 syntax-table (15) fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 45 (fontified t) 45 55 (face nix-attribute-face fontified t) 55 60 (fontified t)) . 1429) (undo-tree-id27 . -45) (undo-tree-id28 . -45) (undo-tree-id29 . -59) (undo-tree-id30 . -45) (undo-tree-id31 . -41) (undo-tree-id32 . -60)) nil (26226 8735 827927 91000) 0 nil])
([nil nil ((#("				Type = \"simple\";
			};
" 0 4 (fontified t) 4 8 (face nix-attribute-face fontified t) 8 11 (fontified t) 11 12 (face font-lock-string-face nix-string-type 34 syntax-table (15) fontified t) 12 18 (face font-lock-string-face fontified t) 18 19 (face font-lock-string-face nix-string-type 34 syntax-table (15) fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 27 (fontified t)) . 1429) (undo-tree-id24 . -26) (undo-tree-id25 . -20) (undo-tree-id26 . -27)) nil (26226 8735 827920 850000) 0 nil])
([nil nil ((#("			serviceConfig = {
				ExecStart = \"/bin/sh -c 'HOME=%h ${appimage-menu-updater}'\";
" 0 3 (fontified t) 3 16 (face nix-attribute-face fontified t) 16 20 (fontified t) 20 21 (fontified t) 21 25 (fontified t) 25 34 (face nix-attribute-face fontified t) 34 37 (fontified t) 37 38 (nix-string-type 34 syntax-table (15) face font-lock-string-face fontified t) 38 58 (face font-lock-string-face fontified t) 58 59 (nix-string-type 34 syntax-table (15) face nix-antiquote-face fontified t) 59 60 (nix-syntax-antiquote t nix-string-type 34 face nix-antiquote-face fontified t) 60 81 (fontified t) 81 82 (nix-syntax-antiquote t nix-string-type 34 face nix-antiquote-face fontified t) 82 83 (nix-string-type 34 syntax-table (15) face font-lock-string-face fontified t) 83 84 (nix-string-type 34 syntax-table (15) face font-lock-string-face fontified t) 84 86 (fontified t)) . 1429) (undo-tree-id21 . -85) (undo-tree-id22 . -20) (undo-tree-id23 . -86)) nil (26226 8735 827917 143000) 0 nil])
([nil nil ((#("			};
			wantedBy = [ \"default.target\" ];
" 0 5 (fontified t) 5 6 (fontified t) 6 9 (fontified t) 9 17 (face nix-attribute-face fontified t) 17 22 (fontified t) 22 23 (nix-string-type 34 syntax-table (15) face font-lock-string-face fontified t) 23 37 (face font-lock-string-face fontified t) 37 38 (nix-string-type 34 syntax-table (15) face font-lock-string-face fontified t) 38 42 (fontified t)) . 1429) (undo-tree-id18 . -41) (undo-tree-id19 . -5) (undo-tree-id20 . -42)) nil (26226 8735 827913 206000) 0 nil])
([nil nil ((#("		};
" 0 4 (fontified t) 4 5 (fontified t)) . 1429) (undo-tree-id11 . -4) (undo-tree-id12 . -2) (undo-tree-id13 . -4) (undo-tree-id14 . -2) (undo-tree-id15 . -2) (undo-tree-id16 . -2) (undo-tree-id17 . -5) 1431) nil (26226 8735 827908 757000) 0 nil])
([nil nil ((#("	};
" 0 3 (fontified t) 3 4 (fontified t)) . 1429) (undo-tree-id0 . -3) (undo-tree-id1 . -3) (undo-tree-id2 . -3) (undo-tree-id3 . -1) (undo-tree-id4 . -3) (undo-tree-id5 . -2) (undo-tree-id6 . -2) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -4) 1430) nil (26226 8735 827893 479000) 0 nil])
([nil nil ((#("	hardware = {
		pulseaudio.enable = false;
" 0 1 (fontified t) 1 9 (face nix-attribute-face fontified t) 9 16 (fontified t) 16 33 (face nix-attribute-face fontified t) 33 36 (fontified t) 36 41 (face nix-builtin-face fontified t) 41 43 (fontified t)) . 1381) (undo-tree-id137 . -41) (undo-tree-id138 . -42) (undo-tree-id139 . -12) (undo-tree-id140 . -41) (undo-tree-id141 . -41) (undo-tree-id142 . -41) (undo-tree-id143 . -41) (undo-tree-id144 . -12) (undo-tree-id145 . -12) (undo-tree-id146 . -12) (undo-tree-id147 . -43) 1393 (t 26226 8735 838348 921000)) nil (26226 8817 240974 243000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1381) (undo-tree-id136 . -1)) nil (26226 8817 240961 309000) 0 nil])
([nil nil ((#("	};
" 0 3 (fontified t) 3 4 (fontified t)) . 1381) (undo-tree-id127 . -4) (undo-tree-id128 . -4) (undo-tree-id129 . -4) (undo-tree-id130 . -3) (undo-tree-id131 . -4) (undo-tree-id132 . -4) (undo-tree-id133 . -1) (undo-tree-id134 . -3) (undo-tree-id135 . -4)) nil (26226 8817 240958 353000) 0 nil])
([nil nil ((#("    	sound.enable = true;
" 0 5 (fontified t) 5 17 (face nix-attribute-face fontified t) 17 20 (fontified t) 20 24 (face nix-builtin-face fontified t) 24 26 (fontified t)) . 1355) (undo-tree-id95 . -26) (undo-tree-id96 . -26) (undo-tree-id97 . -26) (undo-tree-id98 . -26) (undo-tree-id99 . -25) (undo-tree-id100 . -26) (undo-tree-id101 . -26) (undo-tree-id102 . -26) (undo-tree-id103 . -1) (undo-tree-id104 . -26) (undo-tree-id105 . -26) (undo-tree-id106 . -26) (undo-tree-id107 . -26) (undo-tree-id108 . -26) (undo-tree-id109 . -26) (undo-tree-id110 . -26) (undo-tree-id111 . -26) (undo-tree-id112 . -26) (undo-tree-id113 . -26) (undo-tree-id114 . -26) (undo-tree-id115 . -26) (undo-tree-id116 . -26) (undo-tree-id117 . -26) (undo-tree-id118 . -26) (undo-tree-id119 . -26) (undo-tree-id120 . -26) (undo-tree-id121 . -26) (undo-tree-id122 . -26) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -26) 1356) nil (26226 8817 240943 335000) 0 nil])
([nil nil ((#("		pipewire = {
			enable = true;
" 0 2 (fontified t) 2 10 (face nix-attribute-face fontified t) 10 18 (fontified t) 18 24 (face nix-attribute-face fontified t) 24 27 (fontified t) 27 31 (face nix-builtin-face fontified t) 31 33 (fontified t)) . 671) (undo-tree-id176 . -14) (undo-tree-id177 . -32) (undo-tree-id178 . -10) (undo-tree-id179 . -13) (undo-tree-id180 . -14) (undo-tree-id181 . -14) (undo-tree-id182 . -13) (undo-tree-id183 . -13) (undo-tree-id184 . -13) (undo-tree-id185 . -13) (undo-tree-id186 . -13) (undo-tree-id187 . -33) 684 (t 26226 8817 250087 863000)) nil (26226 8884 963679 255000) 0 nil])
([nil nil ((#("			alsa.enable = true;
			alsa.support32Bit = true;
" 0 3 (fontified t) 3 14 (face nix-attribute-face fontified t) 14 17 (fontified t) 17 21 (face nix-builtin-face fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 26 (fontified t) 26 43 (face nix-attribute-face fontified t) 43 46 (fontified t) 46 50 (face nix-builtin-face fontified t) 50 52 (fontified t)) . 671) (undo-tree-id166 . -51) (undo-tree-id167 . -52) (undo-tree-id168 . -12) (undo-tree-id169 . -22) (undo-tree-id170 . -12) (undo-tree-id171 . -12) (undo-tree-id172 . -12) (undo-tree-id173 . -12) (undo-tree-id174 . -12) (undo-tree-id175 . -52) 683) nil (26226 8884 963664 458000) 0 nil])
([nil nil ((#("			pulse.enable = true;
" 0 3 (fontified t) 3 15 (face nix-attribute-face fontified t) 15 18 (fontified t) 18 22 (face nix-builtin-face fontified t) 22 23 (fontified t) 23 24 (fontified t)) . 671) (undo-tree-id157 . -23) (undo-tree-id158 . -12) (undo-tree-id159 . -23) (undo-tree-id160 . -12) (undo-tree-id161 . -12) (undo-tree-id162 . -12) (undo-tree-id163 . -12) (undo-tree-id164 . -12) (undo-tree-id165 . -24) 683) nil (26226 8884 963652 235000) 0 nil])
([nil nil ((#("		};
" 0 4 (fontified t) 4 5 (fontified t)) . 671) (undo-tree-id148 . -4) (undo-tree-id149 . -3) (undo-tree-id150 . -4) (undo-tree-id151 . -3) (undo-tree-id152 . -3) (undo-tree-id153 . -3) (undo-tree-id154 . -3) (undo-tree-id155 . -3) (undo-tree-id156 . -5) 674) nil (26226 8884 963633 100000) 0 nil])
([nil nil ((#("	networking = {
	    networkmanager.enable = true; 
" 0 1 (fontified t) 1 11 (face nix-attribute-face fontified t) 11 15 (fontified t) 15 16 (fontified t) 16 21 (fontified t) 21 42 (face nix-attribute-face fontified t) 42 45 (fontified t) 45 49 (face nix-builtin-face fontified t) 49 52 (fontified t)) . 1241) (undo-tree-id271 . -46) (undo-tree-id272 . 52) (undo-tree-id273 . -51) (undo-tree-id274 . -2) (undo-tree-id275 . -2) (undo-tree-id276 . -2) (undo-tree-id277 . -2) (undo-tree-id278 . -2) (undo-tree-id279 . -7) (undo-tree-id280 . -14) 1255 (t 26226 8884 973017 459000)) nil (26226 15757 884738 989000) 0 nil])
([nil nil ((#("	    firewall.enable = false; 
" 0 5 (fontified t) 5 20 (face nix-attribute-face fontified t) 20 23 (fontified t) 23 28 (face nix-builtin-face fontified t) 28 30 (fontified t) 30 31 (fontified t)) . 1241) (undo-tree-id268 . 31) (undo-tree-id269 . -30) (undo-tree-id270 . -14) 1255) nil (26226 15757 884717 589000) 0 nil])
([nil nil ((#("	};
" 0 3 (fontified t) 3 4 (fontified t)) . 1241) (undo-tree-id265 . 4) (undo-tree-id266 . -3) (undo-tree-id267 . -2) 1243) nil (26226 15757 884714 213000) 0 nil])
([nil nil ((#("		openssh.enable = true;
		openssh.settings.PasswordAuthentication = false;
" 0 2 (fontified t) 2 16 (face nix-attribute-face fontified t) 16 19 (fontified t) 19 23 (face nix-builtin-face fontified t) 23 27 (fontified t) 27 66 (face nix-attribute-face fontified t) 66 69 (fontified t) 69 74 (face nix-builtin-face fontified t) 74 76 (fontified t)) . 696) (undo-tree-id261 . -15) (undo-tree-id262 . -75) (undo-tree-id263 . -3) (undo-tree-id264 . -15) 711) nil (26226 15757 884710 807000) 0 nil])
([nil nil ((#("		avahi = {
			enable = true;
" 0 2 (fontified t) 2 7 (face nix-attribute-face fontified t) 7 15 (fontified t) 15 21 (face nix-attribute-face fontified t) 21 24 (fontified t) 24 28 (face nix-builtin-face fontified t) 28 30 (fontified t)) . 592) (undo-tree-id257 . -11) (undo-tree-id258 . -29) (undo-tree-id259 . -26) (undo-tree-id260 . -10) 602) nil (26226 15757 884706 579000) 0 nil])
([nil nil ((#("			nssmdns4 = true;
			openFirewall = true;
" 0 3 (fontified t) 3 11 (face nix-attribute-face fontified t) 11 14 (fontified t) 14 18 (face nix-builtin-face fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 23 (fontified t) 23 35 (face nix-attribute-face fontified t) 35 38 (fontified t) 38 42 (face nix-builtin-face fontified t) 42 44 (fontified t)) . 592) (undo-tree-id255 . -43) (undo-tree-id256 . -9) 601) nil (26226 15757 884702 431000) 0 nil])
([nil nil ((#("		};
" 0 4 (fontified t) 4 5 (fontified t)) . 592) (undo-tree-id252 . -4) (undo-tree-id253 . -5) (undo-tree-id254 . -3) 595) nil (26226 15757 884699 516000) 0 nil])
([nil nil ((#("		printing = {
			enable = true;
" 0 2 (fontified t) 2 10 (face nix-attribute-face fontified t) 10 18 (fontified t) 18 24 (face nix-attribute-face fontified t) 24 27 (fontified t) 27 31 (face nix-builtin-face fontified t) 31 33 (fontified t)) . 523) (undo-tree-id250 . -32) (undo-tree-id251 . -13) 536) nil (26226 15757 884695 679000) 0 nil])
([nil nil ((#("			drivers = [pkgs.cups-dymo];
" 0 3 (fontified t) 3 10 (face nix-attribute-face fontified t) 10 30 (fontified t) 30 31 (fontified t)) . 523) (undo-tree-id247 . -30) (undo-tree-id248 . -30) (undo-tree-id249 . -12) 535) nil (26226 15757 884693 34000) 0 nil])
([nil nil ((#("		};
" 0 4 (fontified t) 4 5 (fontified t)) . 523) (undo-tree-id243 . -4) (undo-tree-id244 . -5) (undo-tree-id245 . -5) (undo-tree-id246 . -3) 526) nil (26226 15757 884689 597000) 0 nil])
([nil nil ((#("		gvfs.enable = true;
" 0 2 (fontified t) 2 13 (face nix-attribute-face fontified t) 13 16 (fontified t) 16 20 (face nix-builtin-face fontified t) 20 22 (fontified t)) . 144) (undo-tree-id240 . -21) (undo-tree-id241 . -20) (undo-tree-id242 . -13) 157) nil (26226 15757 884685 239000) 0 nil])
([nil nil ((#("let 
   appimage-menu-updater = (pkgs.callPackage ./customPackages/appimage-menu-updater.nix {});
" 0 3 (face nix-keyword-face fontified t) 3 8 (fontified t) 8 29 (face nix-attribute-face fontified t) 29 50 (fontified t) 50 92 (face nix-constant-face fontified t) 92 98 (fontified t)) . 24) (undo-tree-id237 . -4) (undo-tree-id238 . -97) (undo-tree-id239 . -3) 27) nil (26226 15757 884681 533000) 0 nil])
([nil nil ((#("in
" 0 2 (face nix-keyword-face fontified t) 2 3 (face nix-antiquote-face fontified t)) . 24) (undo-tree-id235 . -2) (undo-tree-id236 . -1) 25) nil (26226 15757 884677 695000) 0 nil])
([nil nil ((#("		sysprof.enable = true;
		udev = {
" 0 2 (fontified t) 2 16 (face nix-attribute-face fontified t) 16 19 (fontified t) 19 23 (face nix-builtin-face fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 27 (fontified t) 27 31 (face nix-attribute-face fontified t) 31 36 (fontified t)) . 43) (undo-tree-id224 . -35) (undo-tree-id225 . -35) (undo-tree-id226 . -9) (undo-tree-id227 . -35) (undo-tree-id228 . -35) (undo-tree-id229 . -34) (undo-tree-id230 . -34) (undo-tree-id231 . -9) (undo-tree-id232 . -9) (undo-tree-id233 . -9) (undo-tree-id234 . -36) 52) nil (26226 15757 884674 169000) 0 nil])
([nil nil ((#("			enable = true;
			packages = [ pkgs.gnome.gnome-settings-daemon ];
" 0 3 (fontified t) 3 9 (face nix-attribute-face fontified t) 9 12 (fontified t) 12 16 (face nix-builtin-face fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 21 (fontified t) 21 29 (face nix-attribute-face fontified t) 29 70 (fontified t)) . 43) (undo-tree-id215 . -69) (undo-tree-id216 . -8) (undo-tree-id217 . -17) (undo-tree-id218 . -8) (undo-tree-id219 . -8) (undo-tree-id220 . -8) (undo-tree-id221 . -8) (undo-tree-id222 . -8) (undo-tree-id223 . -70) 51) nil (26226 15757 884546 602000) 0 nil])
([nil nil ((#("                        extraRules = ''
                              ACTION==\"add\", SUBSYSTEM==\"backlight\", KERNEL==\"amdgpu_bl1\", MODE=\"0666\", RUN+=\"${pkgs.coreutils}/bin/chmod a+w /sys/class/backlight/%k/brightness\"
" 0 24 (fontified t) 24 34 (face nix-attribute-face fontified t) 34 37 (fontified t) 37 38 (face font-lock-string-face nix-string-type 39 syntax-table (15) fontified t) 38 39 (face font-lock-string-face fontified t) 39 40 (face font-lock-string-face fontified t) 40 150 (face font-lock-string-face fontified t) 150 151 (nix-string-type 39 syntax-table (15) face nix-antiquote-face fontified t) 151 152 (nix-syntax-antiquote t nix-string-type 39 face nix-antiquote-face fontified t) 152 166 (fontified t) 166 167 (nix-syntax-antiquote t nix-string-type 39 face nix-antiquote-face fontified t) 167 168 (nix-string-type 39 syntax-table (15) face font-lock-string-face fontified t) 168 218 (face font-lock-string-face fontified t)) . 43) (undo-tree-id202 . -70) (undo-tree-id203 . -70) (undo-tree-id204 . -217) (undo-tree-id205 . -70) (undo-tree-id206 . -70) (undo-tree-id207 . -11) (undo-tree-id208 . -39) (undo-tree-id209 . -11) (undo-tree-id210 . -11) (undo-tree-id211 . -11) (undo-tree-id212 . -11) (undo-tree-id213 . -11) (undo-tree-id214 . -218) 54) nil (26226 15757 884865 534000) 0 nil])
([nil nil ((#("                        '';
" 0 24 (fontified t) 24 25 (face font-lock-string-face nix-string-type 39 syntax-table (15) fontified t) 25 26 (face font-lock-string-face fontified t) 26 27 (face font-lock-string-face fontified t) 27 28 (face font-lock-string-face fontified t)) . 43) (undo-tree-id293 . -27) (undo-tree-id294 . -27) (undo-tree-id295 . -27) (undo-tree-id296 . -11) (undo-tree-id297 . -27) (undo-tree-id298 . -11) (undo-tree-id299 . -11) (undo-tree-id300 . -11) (undo-tree-id301 . -11) (undo-tree-id302 . -11) (undo-tree-id303 . -11) (undo-tree-id304 . -11) (undo-tree-id305 . -28) 54) nil (26226 15759 876705 717000) 0 nil] [nil nil ((#("                        '';
		};
" 0 24 (fontified t) 24 25 (face font-lock-string-face nix-string-type 39 syntax-table (15) fontified t) 25 26 (face font-lock-string-face fontified t) 26 27 (face font-lock-string-face fontified t) 27 28 (face font-lock-string-face fontified t) 28 33 (fontified t)) . 43) (undo-tree-id188 . 5) (undo-tree-id189 . -27) (undo-tree-id190 . -32) (undo-tree-id191 . -33) (undo-tree-id192 . -33) (undo-tree-id193 . -27) (undo-tree-id194 . -11) (undo-tree-id195 . -27) (undo-tree-id196 . -11) (undo-tree-id197 . -11) (undo-tree-id198 . -11) (undo-tree-id199 . -11) (undo-tree-id200 . -11) (undo-tree-id201 . -33) 54) ((43 . 76)) (26226 15757 884517 609000) 0 nil])
([nil nil ((#("		};
" 0 4 (fontified t) 4 5 (fontified t)) . 43) (undo-tree-id281 . 5) (undo-tree-id282 . -4) (undo-tree-id283 . -5) (undo-tree-id284 . -5) (undo-tree-id285 . -3) (undo-tree-id286 . -4) (undo-tree-id287 . -3) (undo-tree-id288 . -3) (undo-tree-id289 . -3) (undo-tree-id290 . -3) (undo-tree-id291 . -3) (undo-tree-id292 . -5) 46) nil (26226 15759 876677 355000) 0 nil])
nil
([nil nil ((#("	security.polkit.enable = true;
" 0 1 (fontified t) 1 23 (face nix-attribute-face fontified t) 23 26 (fontified t) 26 30 (face nix-builtin-face fontified t) 30 32 (fontified t)) . 681) (undo-tree-id404 . -19) (undo-tree-id405 . -31) (undo-tree-id406 . -19) 700 (t 26226 15759 881285 596000)) nil (26226 22511 66723 401000) 0 nil])
([nil nil ((#("		xserver = {
			enable = true;
" 0 2 (fontified t) 2 9 (face nix-attribute-face fontified t) 9 17 (fontified t) 17 23 (face nix-attribute-face fontified t) 23 26 (fontified t) 26 30 (face nix-builtin-face fontified t) 30 32 (fontified t)) . 248) (undo-tree-id401 . -31) (undo-tree-id402 . -31) (undo-tree-id403 . -12) 260) nil (26226 22511 66720 54000) 0 nil])
([nil nil ((#("                        displayManager.gdm = {
                          enable = true;
" 0 24 (fontified t) 24 42 (face nix-attribute-face fontified t) 42 46 (fontified t) 46 47 (fontified t) 47 73 (fontified t) 73 79 (face nix-attribute-face fontified t) 79 82 (fontified t) 82 86 (face nix-builtin-face fontified t) 86 88 (fontified t)) . 248) (undo-tree-id399 . -87) (undo-tree-id400 . -14) 262) nil (26226 22511 66715 635000) 0 nil])
([nil nil ((#("                        };
                        desktopManager.gnome.enable = true;
" 0 26 (fontified t) 26 27 (fontified t) 27 51 (fontified t) 51 78 (face nix-attribute-face fontified t) 78 81 (fontified t) 81 85 (face nix-builtin-face fontified t) 85 87 (fontified t)) . 248) (undo-tree-id397 . -86) (undo-tree-id398 . -14) 262) nil (26226 22511 66712 820000) 0 nil])
([nil nil ((#("                        desktopManager.runXdgAutostartIfNone = true;
" 0 24 (fontified t) 24 60 (face nix-attribute-face fontified t) 60 63 (fontified t) 63 67 (face nix-builtin-face fontified t) 67 68 (fontified t) 68 69 (fontified t)) . 248) (undo-tree-id395 . -68) (undo-tree-id396 . -14) 262) nil (26226 22511 66707 730000) 0 nil])
([nil nil ((#("		};
" 0 4 (fontified t) 4 5 (fontified t)) . 248) (undo-tree-id393 . -4) (undo-tree-id394 . -3) 251) nil (26226 22511 66454 499000) 0 nil])
([nil nil ((#("			sddm.wayland.enable = false;
			sddm.enable = false;
" 0 3 (fontified t) 3 22 (face nix-attribute-face fontified t) 22 25 (fontified t) 25 30 (face nix-builtin-face fontified t) 30 35 (fontified t) 35 46 (face nix-attribute-face fontified t) 46 49 (fontified t) 49 54 (face nix-builtin-face fontified t) 54 56 (fontified t)) . 155) (undo-tree-id391 . -55) (undo-tree-id392 . -3) 158) nil (26226 22511 66451 694000) 0 nil])
([nil nil ((#("		displayManager = {
			defaultSession = \"hyprland\";
" 0 2 (fontified t) 2 16 (face nix-attribute-face fontified t) 16 21 (fontified t) 21 24 (fontified t) 24 38 (face nix-attribute-face fontified t) 38 41 (fontified t) 41 42 (face font-lock-string-face nix-string-type 34 syntax-table (15) fontified t) 42 50 (face font-lock-string-face fontified t) 50 51 (face font-lock-string-face nix-string-type 34 syntax-table (15) fontified t) 51 52 (fontified t) 52 53 (fontified t)) . 134) (undo-tree-id389 . -52) (undo-tree-id390 . -4) 138) nil (26226 22511 66448 908000) 0 nil])
([nil nil ((#("		};
" 0 4 (fontified t) 4 5 (fontified t)) . 134) (undo-tree-id386 . -5) (undo-tree-id387 . -4) (undo-tree-id388 . -3) 137) nil (26226 22511 66446 323000) 0 nil])
([nil nil ((#("		

" 0 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 134) (undo-tree-id384 . -3) (undo-tree-id385 . -3) 137) nil (26226 22511 66442 316000) 0 nil])
([nil nil ((#("		desktopManager.plasma6.enable = true;
" 0 2 (fontified t) 2 31 (face nix-attribute-face fontified t) 31 34 (fontified t) 34 38 (face nix-builtin-face fontified t) 38 40 (fontified t)) . 94) (undo-tree-id381 . -40) (undo-tree-id382 . -39) (undo-tree-id383 . -3) 97) nil (26226 22511 66439 701000) 0 nil])
([nil nil ((#("		libinput.enable = true;
" 0 2 (fontified t) 2 17 (face nix-attribute-face fontified t) 17 20 (fontified t) 20 24 (face nix-builtin-face fontified t) 24 25 (fontified t) 25 26 (fontified t)) . 68) (undo-tree-id378 . -26) (undo-tree-id379 . -25) (undo-tree-id380 . -3) 71) nil (26226 22511 66436 134000) 0 nil])
([nil nil ((#("		flatpak.enable = true;
" 0 2 (fontified t) 2 16 (face nix-attribute-face fontified t) 16 19 (fontified t) 19 23 (face nix-builtin-face fontified t) 23 24 (fontified t) 24 25 (fontified t)) . 43) (undo-tree-id370 . -25) (undo-tree-id371 . 25) (undo-tree-id372 . -24) (undo-tree-id373 . -4) (undo-tree-id374 . -4) (undo-tree-id375 . -9) (undo-tree-id376 . -9) (undo-tree-id377 . -2) 45) nil (26226 22511 66432 246000) 0 nil])
([nil nil ((#("    services = {
" 0 4 (fontified t) 4 12 (face nix-attribute-face fontified t) 12 17 (fontified t)) . 26) (undo-tree-id355 . -17) (undo-tree-id356 . -17) (undo-tree-id357 . -17) (undo-tree-id358 . -17) (undo-tree-id359 . -16) (undo-tree-id360 . -17) (undo-tree-id361 . -17) (undo-tree-id362 . -17) (undo-tree-id363 . -17) (undo-tree-id364 . -17) (undo-tree-id365 . -17) (undo-tree-id366 . -17) (undo-tree-id367 . -17) (undo-tree-id368 . -17) (undo-tree-id369 . -3) 29) nil (26226 22511 66423 499000) 0 nil])
([nil nil ((#("	};
" 0 3 (fontified t) 3 4 (fontified t)) . 26) (undo-tree-id346 . 4) (undo-tree-id347 . -3) (undo-tree-id348 . -4) (undo-tree-id349 . -4) (undo-tree-id350 . -4) (undo-tree-id351 . -4) (undo-tree-id352 . -4) (undo-tree-id353 . -4) (undo-tree-id354 . -2) 28) nil (26226 22511 66408 360000) 0 nil])
([nil nil ((#("{ config, pkgs, ... }:
{
" 0 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t)) . 1) (undo-tree-id326 . -25) (undo-tree-id327 . -25) (undo-tree-id328 . -25) (undo-tree-id329 . -24) (undo-tree-id330 . -25) (undo-tree-id331 . -25) (undo-tree-id332 . -25) (undo-tree-id333 . -25) (undo-tree-id334 . -25) (undo-tree-id335 . -25) (undo-tree-id336 . -25) (undo-tree-id337 . -25) (undo-tree-id338 . -25) (undo-tree-id339 . -25) (undo-tree-id340 . -25) (undo-tree-id341 . -25) (undo-tree-id342 . -25) (undo-tree-id343 . -25) (undo-tree-id344 . -25) (undo-tree-id345 . -25)) nil (26226 22511 66399 713000) 0 nil])
([nil nil ((#("        xdg.portal = {
		enable = true;
" 0 8 (fontified t) 8 18 (face nix-attribute-face fontified t) 18 22 (fontified t) 22 23 (fontified t) 23 25 (fontified t) 25 31 (face nix-attribute-face fontified t) 31 34 (fontified t) 34 38 (face nix-builtin-face fontified t) 38 40 (fontified t)) . 1) (undo-tree-id322 . 40) (undo-tree-id323 . -39) (undo-tree-id324 . -3) (undo-tree-id325 . -40)) nil (26226 22511 66379 774000) 0 nil])
([nil nil ((#("                extraPortals = [
                  #pkgs.xdg-desktop-portal-gtk 
" 0 16 (fontified t) 16 28 (face nix-attribute-face fontified t) 28 33 (fontified t) 33 51 (fontified t) 51 81 (face font-lock-comment-face fontified t)) . 1) (undo-tree-id317 . 81) (undo-tree-id318 . -80) (undo-tree-id319 . -52) (undo-tree-id320 . -52) (undo-tree-id321 . -81)) nil (26226 22511 66375 596000) 0 nil])
([nil nil ((#("                ];
	};
" 0 19 (fontified t) 19 23 (fontified t)) . 1) (undo-tree-id314 . 23) (undo-tree-id315 . -22) (undo-tree-id316 . -23)) nil (26226 22511 66368 773000) 0 nil])
([nil current ((#("}
" 0 1 (fontified t) 1 2 (fontified t)) . 1) (undo-tree-id306 . -2) (undo-tree-id307 . 2) (undo-tree-id308 . -1) (undo-tree-id309 . -2) (undo-tree-id310 . -2) (undo-tree-id311 . -2) (undo-tree-id312 . -2) (undo-tree-id313 . -2)) nil (26226 22511 66356 680000) 0 nil])
nil
